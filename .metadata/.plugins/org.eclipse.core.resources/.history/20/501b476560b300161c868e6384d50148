package nameservice;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.HashMap;

import aufgabe3.Client;
import mware_lib.Connection;
import mware_lib.NameService;

public class NameServiceImpl extends NameService {

	private HashMap<String, Object> nameMap;

	@Override
	public void rebind(Object servant, String name) {
		nameMap.put(name, servant);
	}

	@Override
	public Object resolve(String name) {
		return nameMap.get(name);
	}

	public static void main(String[] args) throws IOException {
		ServerSocket mySvrSocket;
		BufferedReader in;
		ObjectOutputStream  objOut; // rebind
		ObjectInputStream  objIn; // resolve

		mySvrSocket = new ServerSocket(8811);

		while (true) {
			Socket mySock = mySvrSocket.accept(); // -> Socket fuer die
												  // eigentliche Verbindung
			in = new BufferedReader(new InputStreamReader(mySock.getInputStream()));
//			objIn = new ObjectInputStream(mySock.getInputStream());
//			try {
//				System.out.println("Object: " + (int)objIn.readObject());
//			} catch (ClassNotFoundException e) {
//				// TODO Auto-generated catch block
//				e.printStackTrace();
//			}
			System.out.println("Try to read");	
			in.readLine();
			String req = in.readLine();
			if(req=="resolve\n"){
				System.out.println("Got resolve request");
				System.out.println("name to resolve: " + in.readLine());
				
			}else if(req=="rebind\n"){
				System.out.println("Got rebind request");
				//TODO get Object with object stream //http://stackoverflow.com/questions/12910350/how-to-send-an-object-over-tcp-in-java
				
			}else{
				System.out.println(req);
			}
			
			in.close();
			mySock.close();
		}
	}
}
