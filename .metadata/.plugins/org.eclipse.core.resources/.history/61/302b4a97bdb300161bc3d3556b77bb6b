package nameservice;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.HashMap;

import aufgabe3.Client;
import mware_lib.Connection;
import mware_lib.NameService;

public class NameServiceImpl extends NameService {

	private static HashMap<String, Object> nameMap;

	@Override
	public void rebind(Object servant, String name) {
		nameMap.put(name, servant);
	}

	@Override
	public Object resolve(String name) {
		return nameMap.get(name);
	}

	public static void main(String[] args) throws IOException, ClassNotFoundException {
		ServerSocket mySvrSocket;
		ObjectOutputStream objOut; // rebind
		ObjectInputStream objIn; // resolve

		mySvrSocket = new ServerSocket(8811);

		while (true) {
			Socket mySock = mySvrSocket.accept();

			objIn = new ObjectInputStream(mySock.getInputStream());
			objOut = new ObjectOutputStream(mySock.getOutputStream());
			// TODO in durch objIn ersetzen? ObjectInputstream kann auch String

			String req = (String) objIn.readObject();
			System.out.println(req);

			if (req.equals("resolve")) {
				System.out.println("Got resolve request");

				String name = (String) objIn.readObject();
				objOut.writeObject(nameMap.get(name));
				objOut.flush();

				System.out.println("Finished resolve request");
				
			} else if (req.equals("rebind")) {
				System.out.println("Got rebind request");
				
				Object servant = (Object) objIn.readObject();
				String name = (String) objIn.readObject();

				System.out.println("Add : " + name + " Object : " + servant.toString() + " to nameMap");

				nameMap.put(name, servant);

				System.out.println("Finished rebind request");
			} else {
				System.out.println(req);
			}

			objIn.close();
			objOut.close();
			mySock.close();
		}
	}
}
